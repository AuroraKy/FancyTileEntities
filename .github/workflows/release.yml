name: Package and Publish
on:
  push:
    tags:
      - 'v*'

env:
  TAG_NAME: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Download Everest stripped lib
      uses: coloursofnoise/get-azure-pipelines-artifact@v0.0.3
      with:
        repository: EverestAPI/Everest
        definitionId: 3
        artifact: lib-stripped
        reasonFilter: 'individualCI'

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore with .NET Core
      run: dotnet restore

    - name: Run Pre-Build Script
      run: |
        VERSION=${TAG_NAME:1}
        [[ "$VERSION" =~ -.*$ ]] && PRERELEASE=true || PRERELEASE=false
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "PRERELEASE=$PRERELEASE" >> $GITHUB_ENV
        yq e -i '.[0].Version = strenv(VERSION)' everest.yaml

    - name: Build with .NET Core
      run: dotnet build "/p:Configuration=Debug"
      env:
        CELESTEGAMEPATH: ${{ github.workspace }}/lib-stripped

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: main
        path: FancyTileEntities/bin/Debug/net452

    - name: Create mod zip
      run: zip -qq -r FancyTileEntities.zip Ahorn FancyTileEntities/bin everest.yaml

    - name: Create Release
      id: release
      uses: softprops/action-gh-release@58fa4b7a8863f6beaf115a49196308842b8b0f06
      with:
        name: FancyTileEntities ${{ env.VERSION }}
        files: FancyTileEntities.zip
        fail_on_unmatched_files: true
        prerelease: ${{ env.PRERELEASE }}

    - name: Update release description
      env:
        RELEASE_ID: ${{ steps.release.outputs.id }}
        DOWNLOAD_URL: ${{ fromJSON(steps.release.outputs.assets)[0].browser_download_url }}
      run: |
        curl \
          -X PATCH \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID" \
          -d "$(jq -n \
            --arg url $DOWNLOAD_URL \
            '{body: "[Install FancyTileEntities.zip](https://0x0a.de/twoclick/?\($url))"}')"
